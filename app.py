import streamlit as st
import math
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

st.set_page_config(page_title="Calculadora Inter√©s Compuesto", layout="centered")
st.title("Calculadora de Inter√©s Compuesto")

# ---------- SELECCI√ìN DE PREGUNTA ----------
pregunta = st.selectbox(
    "¬øQu√© deseas calcular?",
    [
        "¬øCu√°nto puedo ahorrar?",
        "¬øCu√°nto tardar√© en alcanzar mi objetivo de ahorro?",
        "¬øCu√°nto necesito ahorrar en cada per√≠odo para lograr mi objetivo de ahorro?",
        "¬øQu√© porcentaje de inter√©s necesito para llegar a mi objetivo de ahorro?"
    ]
)

# ---------- FRECUENCIA Y MOMENTO DEL DEP√ìSITO ----------
st.sidebar.header("Par√°metros comunes")
frecuencia = st.sidebar.selectbox("Frecuencia de dep√≥sito", ["Semanalmente", "Bi-semanalmente", "Mensualmente", "Anualmente"])
m = {"Semanalmente": 52, "Bi-semanalmente": 26, "Mensualmente": 12, "Anualmente": 1}[frecuencia]
momento = st.sidebar.selectbox("Momento del dep√≥sito", ["Inicio del per√≠odo", "Final del per√≠odo"])

# ---------- OPCI√ìN 1: ¬øCU√ÅNTO PUEDO AHORRAR? ----------
if pregunta == "¬øCu√°nto puedo ahorrar?":
    st.subheader("¬øCu√°nto puedo ahorrar?")
    inicial = st.number_input("Balance inicial (‚Ç¨)", value=1000.0)
    deposito = st.number_input("Dep√≥sito peri√≥dico (‚Ç¨)", value=100.0)
    interes_anual = st.number_input("Ratio de inter√©s anual (%)", value=8.0)
    a√±os = st.number_input("Duraci√≥n (a√±os)", value=10)

    r = interes_anual / 100 / m
    n = int(a√±os * m)
    saldo = inicial
    historial = []

    for periodo in range(1, n + 1):
        if momento == "Inicio del per√≠odo":
            saldo += deposito
        saldo *= (1 + r)
        if momento == "Final del per√≠odo":
            saldo += deposito
        if periodo % m == 0:
            historial.append({
                "A√±o": periodo // m,
                "Dep√≥sito anual": deposito * m,
                "Dep√≥sitos totales": deposito * periodo,
                "Inter√©s acumulado": saldo - inicial - deposito * periodo,
                "Balance": saldo
            })

    df = pd.DataFrame(historial)

    st.markdown(f"### Puedes ahorrar **{saldo:,.2f} ‚Ç¨** en {a√±os:.0f} a√±os")
    st.markdown(f"Aportando {deposito:.2f} ‚Ç¨ {frecuencia.lower()}, con un {interes_anual}% anual")

    col1, col2, col3 = st.columns(3)
    col1.metric("Balance inicial", f"{inicial:,.2f} ‚Ç¨")
    col2.metric("Dep√≥sitos totales", f"{deposito * n:,.2f} ‚Ç¨")
    col3.metric("Inter√©s ganado", f"{saldo - inicial - deposito * n:,.2f} ‚Ç¨")

    # ---------- GR√ÅFICO ----------
    st.subheader("Evoluci√≥n del capital")
    fig, ax = plt.subplots()
    ax.bar(df["A√±o"], inicial, label="Inicial")
    ax.bar(df["A√±o"], df["Dep√≥sitos totales"], bottom=inicial, label="Dep√≥sitos")
    ax.bar(df["A√±o"], df["Inter√©s acumulado"], bottom=inicial + df["Dep√≥sitos totales"], label="Inter√©s")
    ax.set_xlabel("A√±os")
    ax.set_ylabel("‚Ç¨")
    ax.set_title("Ahorro acumulado")
    ax.legend()
    st.pyplot(fig)

    # ---------- TABLA ----------
    st.subheader("Detalle a√±o a a√±o")
    st.dataframe(df.style.format({
        "Dep√≥sito anual": "‚Ç¨{:,.2f}",
        "Dep√≥sitos totales": "‚Ç¨{:,.2f}",
        "Inter√©s acumulado": "‚Ç¨{:,.2f}",
        "Balance": "‚Ç¨{:,.2f}"
    }))

# ---------- LAS OTRAS OPCIONES (solo texto de momento, luego se mejora) ----------
elif pregunta == "¬øCu√°nto tardar√© en alcanzar mi objetivo de ahorro?":
    st.info("üëâ Pr√≥ximamente a√±adiremos el gr√°fico y tabla para esta opci√≥n tambi√©n.")
elif pregunta == "¬øCu√°nto necesito ahorrar en cada per√≠odo para lograr mi objetivo de ahorro?":
    st.info("üëâ Pr√≥ximamente a√±adiremos la visualizaci√≥n para esta opci√≥n.")
elif pregunta == "¬øQu√© porcentaje de inter√©s necesito para llegar a mi objetivo de ahorro?":
    st.info("üëâ Tambi√©n lo haremos visual üòâ")

